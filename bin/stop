#!/usr/bin/env bash
set -euo pipefail

# Stop the ai_agent container
# Usage: bin/stop [--help]

# Determine selected agent name (container name)
SCRIPT_DIR="$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd)"
REPO_ROOT="${SCRIPT_DIR%/bin}"
SELECT_FILE="$REPO_ROOT/.agent-selected"

get_selected() {
  if [[ -f "$SELECT_FILE" ]]; then
    tr -d '\n' <"$SELECT_FILE" | tr -d '\r'
  else
    echo ""
  fi
}

CONTAINER_NAME_DEFAULT="ai_agent"
SELECTED_NAME="$(get_selected)"
if [[ -n "$SELECTED_NAME" ]]; then
  CONTAINER_NAME="$SELECTED_NAME"
else
  CONTAINER_NAME="$CONTAINER_NAME_DEFAULT"
fi

show_help() {
  cat << EOF
Usage: bin/stop [OPTIONS]

Stop the ai_agent container

OPTIONS:
  --help    Show this help message

Examples:
  bin/stop         # Stop the container
  bin/stop --help  # Show this help
EOF
}

# Parse options
while [[ $# -gt 0 ]]; do
  case $1 in
    --help|-h)
      show_help
      exit 0
      ;;
    *)
      echo "Unknown option: $1"
      echo "Use --help for usage information"
      exit 1
      ;;
  esac
done

container_exists() {
  [[ -n "$(docker ps -aq -f name="^${CONTAINER_NAME}$")" ]]
}

container_running() {
  [[ -n "$(docker ps -q -f status=running -f name="^${CONTAINER_NAME}$")" ]]
}

if ! container_exists; then
  echo "Container '$CONTAINER_NAME' does not exist"
  exit 0
elif ! container_running; then
  echo "Container '$CONTAINER_NAME' is already stopped"
  exit 0
else
  echo "Stopping container '$CONTAINER_NAME'..."
  docker stop "$CONTAINER_NAME" >/dev/null
  echo "Container stopped"
fi